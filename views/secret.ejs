<head>
  <title>Αρχική</title>
  <link rel="stylesheet" href="style.css">
  <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"
    integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
    crossorigin="anonymous"
  />
  <link
    rel="stylesheet"
    href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin=""
  />
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@0.76.0/dist/L.Control.Locate.min.css"
  />
  <link rel="stylesheet" href="dist/leaflet.awesome-markers.css" />
  <link
    rel="stylesheet"
    href="http://code.ionicframework.com/ionicons/1.5.2/css/ionicons.min.css"
  />
  <style>
    #map {
     
      height: 400px;
    }
  </style>
</head>

<body>
  <div data-include="/menu.html"></div>
  <div id="map"></div>
  <script src="myglobals.js" type="text/javascript"></script>
  <script src="dist/include-html.min.js"></script>
  <script
    src="https://code.jquery.com/jquery-3.6.0.min.js"
    integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
    crossorigin="anonymous"
  ></script>
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"
    integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
    crossorigin="anonymous"
  ></script>
  <script
    src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
    integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
    crossorigin=""
  ></script>
  <script
    src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@0.76.0/dist/L.Control.Locate.min.js"
    charset="utf-8"
  ></script>
  <script src="dist/leaflet.awesome-markers.js"></script>
  <script>
    // custom marker icons
    var blueMarker = L.AwesomeMarkers.icon({
      icon: "home",
      markerColor: "blue",
    });
    var redMarker = L.AwesomeMarkers.icon({
      icon: "star",
      markerColor: "red",
    });
    var greenMarker = L.AwesomeMarkers.icon({
      icon: "star",
      markerColor: "green",
    });
    var orangeMarker = L.AwesomeMarkers.icon({
      icon: "star",
      markerColor: "orange",
    });
    // time settings
    const d = new Date();
    const fixWeek = [6, 0, 1, 2, 3, 4, 5];
    const fixTime = [
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
      21, 22, 23, 0, 1,
    ];
    // map settings
    const myMap = L.map("map");
    const tileUrl =
      "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";
    const attribution =
      '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
    const tiles = L.tileLayer(tileUrl, { attribution });
    tiles.addTo(myMap);
    const myLayer = L.layerGroup().addTo(myMap);
    const circlesLayer = L.layerGroup().addTo(myMap);
    L.control
      .locate({
        initialZoomLevel: 13.5,
        position: "bottomleft",
        drawMarker: false,
        drawCircle: true,
      })
      .addTo(myMap);
    // find location
    if (!navigator.geolocation) {
      console.log("geolocation is not supported");
    } else {
      console.log("geolocation is supported");
      navigator.geolocation.getCurrentPosition((position) => {
        const data = {
          lat: position.coords.latitude,
          long: position.coords.longitude,
        };
        const marker = L.marker([data.lat, data.long], { icon: blueMarker })
          .bindPopup("<b> Η τοποθεσία μου")
          .addTo(myMap);
        L.circle([data.lat, data.long], 20).addTo(myMap);
        myMap.setView([data.lat, data.long], 13.5);
        const myMapBounds = myMap.getBounds();
      });
    }
    //fake location for distance debugging
    const fake = {
      lat: 38.250021,
      lng: 21.737892,
    };
    const marker = L.marker([fake.lat, fake.lng], { icon: blueMarker })
      .bindPopup("<b> Η τοποθεσία μου")
      .addTo(myMap);
    L.circle([fake.lat, fake.lng], 20).addTo(myMap);
    myMap.setView([fake.lat, fake.lng], 13.5);

    function submitData(e) {
      const searchResults = document.getElementById("searchResults");
      let match = e.value.match(/\s*/);
      if (match[0] === e.value) {
        searchResults.innerHTML = "";
        return;
      }
      fetch("getPOIS", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ payload: e.value }),
      })
        .then((res) => res.json())
        .then((data) => {
          let payload = data.payload;
          searchResults.innerHTML = "";
          payload.forEach((item, index) => {
            const POIdata = {
              id: item.id,
              name: item.name,
              address: item.address,
              lat: item.coordinates.lat,
              lng: item.coordinates.lng,
              cur: item.current_popularity,
              day: item.populartimes[fixWeek[d.getDay()]].name,
              popnow:
                item.populartimes[fixWeek[d.getDay()]].data[
                  fixTime[d.getHours()]
                ],
              pop1hr:
                item.populartimes[fixWeek[d.getDay()]].data[
                  fixTime[d.getHours() + 1]
                ],
              pop2hr:
                item.populartimes[fixWeek[d.getDay()]].data[
                  fixTime[d.getHours() + 2]
                ],
            };
            if (
              POIdata.lat <= myMap.getBounds()._northEast.lat &&
              POIdata.lat >= myMap.getBounds()._southWest.lat &&
              POIdata.lng <= myMap.getBounds()._northEast.lng &&
              POIdata.lng >= myMap.getBounds()._southWest.lng
            ) {
              if (index >= 0) {
                searchResults.innerHTML += "<hr>";
                searchResults.innerHTML += `<button type="button" class="btn btn-link" onclick="foo(${item.coordinates.lat}, ${item.coordinates.lng})">${item.name}</button>`;
              }
              // calculate distance between location and marker
              let latlng1 = L.latLng([POIdata.lat, POIdata.lng]);
              let latlng2 = L.latLng([fake.lat, fake.lng]);
              let distance = latlng1.distanceTo(latlng2);
              // calculate average popularity of the next 3 hours
              const averagePop3hr =
                [POIdata.popnow + POIdata.pop1hr + POIdata.pop2hr] / 3;
              // add data to popups
              if (POIdata.cur == null) {
                txt = "Δεν υπάρχουν δεδομένα επισκεπτών";
              } else if (POIdata.cur == 1) {
                txt = `${POIdata.cur} επισκέπτης τώρα`;
              } else {
                txt = `${POIdata.cur} επισκέπτες τώρα`;
              }
              const popupContent2 =
                "<b>" +
                POIdata.name +
                "</b><br />Διεύθυνση: " +
                POIdata.address +
                "</b><br />Εκτίμηση επισκεψιμότητας: " +
                averagePop3hr.toFixed(1) +
                "%" +
                "</b><br />" +
                txt;
              const popupContent1 =
                popupContent2 +
                `<button class="btn btn-default btn-block" data-toggle="collapse" data-target="#demo">Καταχώρηση Eπίσκεψης</button>
                <div id="demo" class="collapse">
                <form action="/visit" method="POST" onsubmit="return confirm('Είστε σίγουροι ότι θέλετε να καταχωρήσετε την επίσκεψη;');"><br/>
                <button class="btn btn-default btn-block" type="button" data-toggle="collapse" data-target="#demo2"/>Εκτίμηση Aτόμων</button><br/>
                <div id="demo2" class="collapse">
                <input class="form-control" type="number" min="1" name="ppl" id="ppl" /><br/>
                <input class="form-control" type="hidden" name="poiname" id="poiname" value="${POIdata.name}" />
                <input class="form-control" type="hidden" name="poiid" id="poiid" value="${POIdata.id}" />
                </div>
                <input class="btn btn-danger btn-block" type="submit" name="submit" id="submit" value="Υποβολή"/><br/>
                </form></div>`;
              // populate map with markers
              if (averagePop3hr <= 32) {
                if (distance <= 20) {
                  L.marker([POIdata.lat, POIdata.lng], { icon: greenMarker })
                    .bindPopup(popupContent1)
                    .addTo(myLayer);
                } else {
                  L.marker([POIdata.lat, POIdata.lng], { icon: greenMarker })
                    .bindPopup(popupContent2)
                    .addTo(myLayer);
                }
              } else if (averagePop3hr > 32 && averagePop3hr <= 65) {
                if (distance <= 20) {
                  L.marker([POIdata.lat, POIdata.lng], { icon: orangeMarker })
                    .bindPopup(popupContent1)
                    .addTo(myLayer);
                } else {
                  L.marker([POIdata.lat, POIdata.lng], { icon: orangeMarker })
                    .bindPopup(popupContent2)
                    .addTo(myLayer);
                }
              } else if (averagePop3hr > 65) {
                if (distance <= 20) {
                  L.marker([POIdata.lat, POIdata.lng], { icon: redMarker })
                    .bindPopup(popupContent1)
                    .addTo(myLayer);
                } else {
                  L.marker([POIdata.lat, POIdata.lng], { icon: redMarker })
                    .bindPopup(popupContent2)
                    .addTo(myLayer);
                }
              }
            }
          });
          return;
        });
    }
    // clear layers before inserting new
    function clearMap() {
      myLayer.clearLayers();
      circlesLayer.clearLayers();
      return;
    }
    // set view to marker's location
    function foo(x, y) {
      circlesLayer.clearLayers();
      myMap.setView([x, y], 18);
      L.circle([x, y], 20).addTo(circlesLayer);
      return;
    }
  </script>
  <div class="panel panel-default">
    <div class="panel-body">
      <input
        type="text"
        id="search-box"
        class="form-control"
        placeholder="Αναζήτηση"
        onkeyup="clearMap() + submitData(this)"
        autofocus
      />
      <section id="searchResults"></section>
    </div>
  </div>   
  </div>
</body>
